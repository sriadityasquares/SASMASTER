@model ModelLayer.BookingInformation
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Booking = "active";
    var message = TempData["successmessage"] ?? string.Empty;
}

<br />
<br />
@using (Html.BeginForm("New", "Booking", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "submitbtn" }))
{
    //@(ViewContext.ClientValidationEnabled = false)

    @Html.AntiForgeryToken()
    <div class="jumbotron">
        <div class="row">
            <div class="col-md-1 col-xs">
                <h3 align="center">New Booking</h3>
            </div>

        </div>
        <div class="row">
            <h4 style="color:#ea4f4c;margin-bottom:4px">Customer Information</h4>
            <hr />
        </div>

        <div class="row" style="padding-top:5px">
            @Html.LabelFor(m => m.Name, new { @class = "col-md-1 required" })
            @Html.TextBoxFor(m => m.Name, new { @class = "textbox-control col-md-11 col-xs" })
            @*@Html.ValidationMessageFor(m=>m.Name ,"",new { @class = "text-danger" })*@
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Country, new { @class = "col-md-1" })
            @Html.DropDownListFor(model => model.Country, ViewBag.CountryList as SelectList, "--Select Country--", new { @class = "textbox-control col-md-3 col-xs" })
            @Html.LabelFor(m => m.State, new { @class = "col-md-1" })
            @Html.DropDownListFor(model => model.State, new SelectList(" "), "--Select State--", new { @class = "textbox-control col-md-3 col-xs" })
            @*@Html.ValidationMessageFor(m => m.stateID, "", new { @class = "text-danger" })*@
            @Html.LabelFor(m => m.City, new { @class = "col-md-1" })
            @Html.DropDownListFor(model => model.City, new SelectList(" "), "--Select City--", new { @class = "textbox-control col-md-3 col-xs" })
            @*@Html.ValidationMessageFor(m => m.CityID, "", new { @class = "text-danger" })*@
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Nominee, new { @class = "col-md-1" })
            @Html.TextBoxFor(m => m.Nominee, new { @class = "textbox-control col-md-11 col-xs" })

        </div>
        <div class="row">
            @Html.LabelFor(m => m.Relationship, new { @class = "col-md-1" })
            @Html.TextBoxFor(m => m.Relationship, new { @class = "textbox-control col-md-3 col-xs" })
            @Html.LabelFor(m => m.Age, new { @class = "col-md-1" })
            @Html.TextBoxFor(m => m.Age, new { @class = "textbox-control col-md-3 col-xs" })
            @Html.LabelFor(m => m.Dob, new { @class = "col-md-1" })
            @Html.TextBoxFor(m => m.Dob, new { @class = "textbox-control col-md-3 col-xs" })
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Aadhar, new { @class = "col-md-1" })
            @Html.TextBoxFor(m => m.Aadhar, new { @class = "textbox-control col-md-5 col-xs" })
            @Html.LabelFor(m => m.Pan, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.Pan, new { @class = "textbox-control col-md-4 col-xs" })
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Address, new { @class = "col-md-1" })
            @Html.TextBoxFor(m => m.Address, new { @class = "textbox-control col-md-5 col-xs" })
            @Html.LabelFor(m => m.Pincode, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.Pincode, new { @class = "textbox-control col-md-4 col-xs" })
        </div>
        <div style="padding-top:5px" class="row">
            @Html.LabelFor(m => m.Mobile, new { @class = "col-md-1" })
            @Html.TextBoxFor(m => m.Mobile, new { @class = "textbox-control col-md-5 col-xs" })
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.Email, new { @class = "textbox-control col-md-4 col-xs" })
        </div>

        <div class="row">
            <h4 style="color:#ea4f4c;margin-bottom:4px">Booking Information</h4>
            <hr />
        </div>
        <div class="row" style="padding-top:5px">
            @Html.LabelFor(m => m.ProjectID, new { @class = "col-md-1" })
            @Html.DropDownListFor(model => model.ProjectID, ViewBag.ProjectList as SelectList, "--Select Project--", new { @class = "textbox-control col-md-3 col-xs" })
            @Html.LabelFor(m => m.TowerID, new { @class = "col-md-1" })
            @Html.DropDownListFor(model => model.TowerID, new SelectList(" "), "--Select Tower--", new { @class = "textbox-control col-md-3 col-xs" })
            @Html.LabelFor(m => m.FlatID, new { @class = "col-md-1" })
            @Html.DropDownListFor(model => model.FlatID, new SelectList(" "), "--Select Flat--", new { @class = "textbox-control col-md-3 col-xs" })
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Floor, new { @class = "col-md-1" })
            @Html.TextBoxFor(m => m.Floor, new { @class = "textbox-control col-md-1 col-xs", @readonly = "readonly" })
            @Html.LabelFor(m => m.Bhk, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.Bhk, new { @class = "textbox-control col-md-1 col-xs", @readonly = "readonly" })
            @Html.LabelFor(m => m.Area, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.Area, new { @class = "textbox-control col-md-1 col-xs", @readonly = "readonly" })
            @Html.LabelFor(m => m.Facing, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.Facing, new { @class = "textbox-control col-md-1 col-xs", @readonly = "readonly" })
        </div>
        <div class="row">
            @Html.LabelFor(m => m.SftRate, new { @class = "col-md-1" })
            @Html.TextBoxFor(m => m.SftRate, new { @class = "textbox-control col-md-1 col-xs", @type = "number" })
            @Html.LabelFor(m => m.HighRiseCharges, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.HighRiseCharges, new { @class = "textbox-control col-md-1 col-xs", @type = "number" })


            @Html.LabelFor(m => m.Discount, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.Discount, new { @class = "textbox-control col-md-1 col-xs", @type = "number" })


            @Html.LabelFor(m => m.TotalRate, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.TotalRate, new { @class = "textbox-control col-md-1 col-xs", @readonly = "readonly" })
        </div>
        <div class="row">
            @Html.LabelFor(m => m.AgentID, new { @class = "col-md-1" })
            @Html.DropDownListFor(model => model.AgentID, new SelectList(" "), "--Select Agent--", new { @class = "textbox-control col-md-2 col-xs" })
            @*@Html.LabelFor(m => m.AgentCharges, new { @class = "col-md-1" })
                @Html.TextBoxFor(m => m.AgentCharges, new { @class = "textbox-control col-md-1 col-xs", @readonly = "readonly" })*@

            @Html.LabelFor(m => m.FinalRate, new { @class = "col-md-1" })
            @Html.TextBoxFor(m => m.FinalRate, new { @class = "textbox-control col-md-1 col-xs", @readonly = "readonly" })
            @Html.LabelFor(m => m.ClubHouseCharges, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.ClubHouseCharges, new { @class = "textbox-control col-md-1 col-xs", @readonly = "readonly" })
            @Html.LabelFor(m => m.GrandRate, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.GrandRate, new { @class = "textbox-control col-md-1 col-xs", @readonly = "readonly" })
        </div>
        <div class="row">

            @Html.LabelFor(m => m.PaymentMode, new { @class = "col-md-1" })
            @Html.DropDownListFor(m => m.PaymentMode, new List<SelectListItem>
    {
         new SelectListItem{ Text="--Mode--", Value = "0"  },
        new SelectListItem{ Text="Cheque", Value = "1" },
        new SelectListItem{ Text="NEFT", Value = "2" },
        new SelectListItem{ Text="CC", Value = "3" },
        new SelectListItem{ Text="Cash", Value = "4" },
     }, new { @class = "textbox-control col-md-2 col-xs", @readonly = "readonly" })
            @Html.LabelFor(m => m.ReferenceNo, new { @class = "col-md-1" })
            @Html.TextBoxFor(m => m.ReferenceNo, new { @class = "textbox-control col-md-1 col-xs" })
            @Html.LabelFor(m => m.BookingAmount, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.BookingAmount, new { @class = "textbox-control col-md-1 col-xs" })
            @Html.LabelFor(m => m.BalanceAmount, new { @class = "col-md-2" })
            @Html.TextBoxFor(m => m.BalanceAmount, new { @class = "textbox-control col-md-1 col-xs", @readonly = "readonly" })
        </div>
        <div class="row">
            <br />
            <div class="col-md-6 no-pad">
                <button type="submit" id="submitbtn" value="New" class="btn btn-default orangebg pull-right"><i class="fa fa-check"></i>Book</button>
            </div>
        </div>

    </div>

}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="@Url.Content("~/Scripts/jquery-ui-1.12.1.min.js")"></script>
<script src="~/Scripts/toastr.min.js"></script>
<link href="~/Content/toastr.min.css" rel="stylesheet" />
<script>
    var ClubHouseCharges;
    $(document).ready(function () {
        $("#Country").change(function () {
            if ($("#Country").val() != '') {
                $.get("/Cascade/GetStateList", { CountryId: $("#Country").val() }, function (data) {
                    $("#State").empty();
                    $("#State").append("<option value='" + 0 + "'>" + "--Select State--" + "</option>")
                    $("#City").empty();
                    $("#City").append("<option value='" + 0 + "'>" + "--Select City--" + "</option>")
                    $.each(data, function (index, row) {
                        $("#State").append("<option value='" + row.StateID + "'>" + row.StateName + "</option>")
                    });
                });
            }
            else {
                $("#State").empty();
                $("#State").append("<option value='" + 0 + "'>" + "--Select State--" + "</option>")
                $("#City").empty();
                $("#City").append("<option value='" + 0 + "'>" + "--Select City--" + "</option>")
            }
        })
    });

    $("#State").change(function () {
        $.get("/Cascade/GetCityList", { StateId: $("#State").val() }, function (data) {
            $("#City").empty();
            $("#City").append("<option value='" + 0 + "'>" + "--Select City--" + "</option>")
            $.each(data, function (index, row) {
                $("#City").append("<option value='" + row.CityID + "'>" + row.CityName + "</option>")
            });
        });
    });

    $("#ProjectID").change(function () {
        $.get("/Booking/GetTowers", { ProjectId: $("#ProjectID").val() }, function (data) {
            $("#TowerID").empty();
            $("#TowerID").append("<option value='" + 0 + "'>" + "--Select Tower--" + "</option>")
            $("#FlatID").empty();
            $("#FlatID").append("<option value='" + 0 + "'>" + "--Select Flat--" + "</option>")
            ClearTextFiels();
            $.each(data, function (index, row) {
                $("#TowerID").append("<option value='" + row.TowerID + "'>" + row.TowerName + "</option>")
            });
        });
        $.get("/Booking/GetProjectAgents", { ProjectId: $("#ProjectID").val() }, function (data) {
            $("#AgentID").empty();
            $("#AgentID").append("<option value='" + 0 + "'>" + "--Select Agent--" + "</option>")
            $.each(data, function (index, row) {
                $("#AgentID").append("<option value='" + row.AgentID + "'>" + row.AgentName + "</option>")
            });
        });
    });

    $("#TowerID").change(function () {
        $.get("/Booking/GetFlats", { TowerId: $("#TowerID").val() }, function (data) {
            //$("#TowerID").empty();
            //$("#TowerID").append("<option value='" + 0 + "'>" + "--Select Tower--" + "</option>")
            $("#FlatID").empty();
            $("#FlatID").append("<option value='" + 0 + "'>" + "--Select Flat--" + "</option>")
            ClearTextFiels();
            $.each(data, function (index, row) {
                $("#FlatID").append("<option value='" + row.FlatID + "'>" + row.FlatName + "</option>")
            });
        });
    });

    $("#FlatID").change(function () {
        if ($("#FlatID").val() != 0) {
            $.get("/Booking/GetFlatDetails", { FlatId: $("#FlatID").val(), ProjectId: $("#ProjectID").val() }, function (data) {
                //$("#TowerID").empty();
                //$("#TowerID").append("<option value='" + 0 + "'>" + "--Select Tower--" + "</option>")
                //$("#FlatID").empty();
                //$("#FlatID").append("<option value='" + 0 + "'>" + "--Select Flat--" + "</option>")
                $.each(data, function (index, row) {
                    debugger;
                    $("#Floor").val(row.Floor);
                    $("#Bhk").val(row.Bhk);
                    //$("#HighRiseCharges").val(row.HighRiseCharges);
                    $("#Area").val(row.Sft);
                    //$("#MaintenanceCharges").val(row.Maintenance);
                    $("#Facing").val(row.Facing);
                    //$("#TotalRate").val(row.TotalRate);
                    $("#ClubHouseCharges").val(row.ClubHouseCharges);

                });
            });
        }
        else {
            ClearTextFiels();
        }
    });

    function ClearTextFiels() {
        $("#Floor").val('');
        $("#Bhk").val('');
        $("#HighRiseCharges").val('');
        $("#Area").val('');
        //$("#MaintenanceCharges").val('');
        $("#Facing").val('');
        $("#TotalRate").val('');
        $("#FinalRate").val('');
        $("#GrandRate").val('');
        $("#BookingAmount").val('');
        $("#BalanceAmount").val('');
        $("#SftRate").val('');
        //$("#TotalRate").val('');
        $("#ClubHouseCharges").val('');
    }

    $("#SftRate").keyup(function () {
        SetTotalRate();
    });

    $("#HighRiseCharges").keyup(function () {
        SetTotalRate();
    });

    $("#Discount").keyup(function () {
        SetTotalRate();
    });

    $("#BookingAmount").keyup(function () {
        SetBalanceAmount();
    });

    function SetTotalRate() {
        if ($("#SftRate").val() != '' && $("#HighRiseCharges").val() != '' && $("#Discount").val() != '') {
            $("#TotalRate").val(parseInt($("#SftRate").val()) + parseInt($("#HighRiseCharges").val()) - parseInt($("#Discount").val()));
            $("#FinalRate").val(parseInt($("#TotalRate").val()) * parseInt($("#Area").val()))
            if ($("#ClubHouseCharges").val() != '') {
                $("#GrandRate").val(parseInt($("#FinalRate").val()) + parseInt($("#ClubHouseCharges").val()))
            }
        }
        else {
            $("#TotalRate").val('');
            $("#FinalRate").val('');
            $("#GrandRate").val('');
            $("#BookingAmount").val('');
            $("#BalanceAmount").val('');
        }
    }


    function SetBalanceAmount() {
        if ($("#GrandRate").val() != '' && $("#BookingAmount").val() != '') {
            $("#BalanceAmount").val(parseInt($("#GrandRate").val()) - parseInt($("#BookingAmount").val()))
        }
        else {
            $("#BalanceAmount").val('')
        }
    }




    $("#submitbtn").submit(function () {
        Validations();
        //if (!$('#submitbtn').valid()) {
        //    $('#ValidationSummaryModal').modal('show');
        //}
    });

    function Validations() {
        if ($("#Name").val() == '') {
            toastr.error("Name is Required");
            return;
        }
        if ($("#Country").val() == '') {
            toastr.error("Country is Required"); return;
        }
        if ($("#State").val() == '0') {
            toastr.error("State is Required"); return;
        }
        if ($("#City").val() == '0') {
            toastr.error("City is Required"); return;
        }
        if ($("#Nominee").val() == '') {
            toastr.error("Nominee is Required"); return;
        }
        if ($("#Relationship").val() == '0') {
            toastr.error("Relationship is Required"); return;
        }
        if ($("#Age").val() == '') {
            toastr.error("Age is Required"); return;
        }
        if ($("#Dob").val() == '0') {
            toastr.error("Dob is Required"); return;
        }
        if ($("#Aadhar").val() == '0') {
            toastr.error("Aadhar is Required"); return;
        }
        if ($("#Pan").val() == '') {
            toastr.error("Pan is Required"); return;
        }
        if ($("#Address").val() == '0') {
            toastr.error("Address is Required"); return;
        }
        if ($("#Pincode").val() == '0') {
            toastr.error("Pincode is Required"); return;
        }
        if ($("#Mobile").val() == '0') {
            toastr.error("Mobile is Required"); return;
        }
        if ($("#Email").val() == '0') {
            toastr.error("Email is Required"); return;
        }
    }
</script>

<script type="text/javascript">
    $(window).load(function () {
        var tempdataval = '@TempData["successmessage"]';
        if (tempdataval != '') {
            if (tempdataval == 'Booking Successfully')
                toastr.success(tempdataval);
            else {
                toastr.error(tempdataval);
            }
        }
        
    });
</script>

<style>
    .validation-summary-errors {
        font-size: 12px;
        font-family: 'OpenSans normal', sans-serif;
        font-weight: bold !important;
        color: red !important;
    }
</style>